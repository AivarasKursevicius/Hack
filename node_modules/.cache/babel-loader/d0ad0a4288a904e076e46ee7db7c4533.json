{"ast":null,"code":"var _jsxFileName = \"/Users/aivaraskursevicius/Hackathon2021/front-end/src/pages/homepage/chart.component.jsx\";\nimport React from 'react';\nimport { FunnelChart, Funnel, LabelList, Tooltip } from 'recharts';\nimport { data } from '../../data/chartData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nconst Chart = props => {\n  const filteredData = data.filter(item => item.coordinates.find(coordinate => coordinate.lat > props.coordinates.lat - 1 && coordinate.lat < props.coordinates.lat + 1 && coordinate.lng > props.coordinates.lng - 1 && coordinate.lng < props.coordinates.lng + 1));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: divStyle,\n    children: filteredData.length > 0 ? /*#__PURE__*/_jsxDEV(FunnelChart, {\n      width: 380,\n      height: 250,\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Funnel, {\n        dataKey: \"value\",\n        data: filteredData,\n        isAnimationActive: true,\n        children: /*#__PURE__*/_jsxDEV(LabelList, {\n          position: \"right\",\n          fill: \"#000\",\n          stroke: \"none\",\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this) : 'No data Found'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/aivaraskursevicius/Hackathon2021/front-end/src/pages/homepage/chart.component.jsx"],"names":["React","FunnelChart","Funnel","LabelList","Tooltip","data","divStyle","width","height","Chart","props","filteredData","filter","item","coordinates","find","coordinate","lat","lng","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,OAAzC,QAAwD,UAAxD;AACA,SAASC,IAAT,QAAqB,sBAArB;;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE,MADM;AAEbC,EAAAA,MAAM,EAAE;AAFK,CAAjB;;AAKA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAMC,YAAY,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAuBC,UAAD,IAAkBA,UAAU,CAACC,GAAX,GAAkBP,KAAK,CAACI,WAAN,CAAkBG,GAAlB,GAAwB,CAA3C,IAAmDD,UAAU,CAACC,GAAX,GAAkBP,KAAK,CAACI,WAAN,CAAkBG,GAAlB,GAAwB,CAA7F,IAAqGD,UAAU,CAACE,GAAX,GAAkBR,KAAK,CAACI,WAAN,CAAkBI,GAAlB,GAAwB,CAA/I,IAAuJF,UAAU,CAACE,GAAX,GAAkBR,KAAK,CAACI,WAAN,CAAkBI,GAAlB,GAAwB,CAAxO,CAAtB,CAArB;AAEA,sBACI;AAAK,IAAA,KAAK,EAAEZ,QAAZ;AAAA,cACKK,YAAY,CAACQ,MAAb,GAAsB,CAAtB,gBACG,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE,GAApB;AAAyB,MAAA,MAAM,EAAE,GAAjC;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,IAAI,EAAER,YAFV;AAGI,QAAA,iBAAiB,MAHrB;AAAA,+BAKI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,OAApB;AAA4B,UAAA,IAAI,EAAC,MAAjC;AAAwC,UAAA,MAAM,EAAC,MAA/C;AAAsD,UAAA,OAAO,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAWK;AAZV;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApBD;;KAAMF,K;AAsBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { FunnelChart, Funnel, LabelList, Tooltip } from 'recharts';\nimport { data } from '../../data/chartData'\n\nconst divStyle = {\n    width: \"100%\",\n    height: \"100%\"\n}\n\nconst Chart = (props) => {\n\n    const filteredData = data.filter((item) => item.coordinates.find((coordinate) => ((coordinate.lat > (props.coordinates.lat - 1)) && (coordinate.lat < (props.coordinates.lat + 1)) && (coordinate.lng > (props.coordinates.lng - 1)) && (coordinate.lng < (props.coordinates.lng + 1)))));\n\n    return (\n        <div style={divStyle}>\n            {filteredData.length > 0 ?\n                <FunnelChart width={380} height={250}>\n                    <Tooltip />\n                    <Funnel\n                        dataKey=\"value\"\n                        data={filteredData}\n                        isAnimationActive\n                    >\n                        <LabelList position=\"right\" fill=\"#000\" stroke=\"none\" dataKey=\"name\" />\n                    </Funnel>\n                </FunnelChart>\n                : 'No data Found'}\n        </div>\n    );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}