{"ast":null,"code":"var _jsxFileName = \"/Users/aivaraskursevicius/Hackathon2021/front-end/src/pages/homepage/chart.component.jsx\";\nimport React from 'react';\nimport { FunnelChart, Funnel, LabelList, Tooltip } from 'recharts';\nimport { data } from '../../data/chartData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst chartWrapperStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  margin: '0 0 0 100px'\n};\nconst headlineStyle = {\n  margin: '10px 150px 0 0'\n};\nconst pStyle = {\n  margin: '10px 150px 0 0',\n  color: \"#a84832\"\n};\n\nconst Chart = props => {\n  const filteredData = data.filter(item => item.coordinates.find(coordinate => coordinate.lat > props.coordinates.lat - 1 && coordinate.lat < props.coordinates.lat + 1 && coordinate.lng > props.coordinates.lng - 1 && coordinate.lng < props.coordinates.lng + 1));\n  const valueTotal = filteredData.reduce((totalValue, item) => totalValue + (item.name === \"Wind m/s\" ? item.value * 0.3 : item.name === \"Temperature °C\" ? item.value * 2 * 0.4 : item.name === \"Garbage reports\" ? item.value * 0.2 : item.name === \"Humidity %\" ? item.value / 4 * 0.1 : item.value), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: divStyle,\n    children: filteredData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chartWrapperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: pStyle,\n        children: [\"Possibility of fire \", Math.round(valueTotal), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: headlineStyle,\n        children: \"We predict Fire based on these parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FunnelChart, {\n        width: 380,\n        height: 250,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Funnel, {\n          dataKey: \"value\",\n          data: filteredData,\n          isAnimationActive: true,\n          children: /*#__PURE__*/_jsxDEV(LabelList, {\n            position: \"right\",\n            fill: \"#000\",\n            stroke: \"none\",\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this) : 'No data Found'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/aivaraskursevicius/Hackathon2021/front-end/src/pages/homepage/chart.component.jsx"],"names":["React","FunnelChart","Funnel","LabelList","Tooltip","data","divStyle","width","height","chartWrapperStyle","margin","headlineStyle","pStyle","color","Chart","props","filteredData","filter","item","coordinates","find","coordinate","lat","lng","valueTotal","reduce","totalValue","name","value","length","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FunnelChart, Funnel, LabelList, Tooltip } from 'recharts';\nimport { data } from '../../data/chartData'\n\nconst divStyle = {\n    width: \"100%\",\n    height: \"100%\"\n}\n\nconst chartWrapperStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    margin: '0 0 0 100px'\n}\n\nconst headlineStyle = {\n    margin: '10px 150px 0 0'\n}\n\nconst pStyle = {\n    margin: '10px 150px 0 0',\n    color: \"#a84832\",\n}\n\nconst Chart = (props) => {\n\n    const filteredData = data.filter((item) => item.coordinates.find((coordinate) => ((coordinate.lat > (props.coordinates.lat - 1)) && (coordinate.lat < (props.coordinates.lat + 1)) && (coordinate.lng > (props.coordinates.lng - 1)) && (coordinate.lng < (props.coordinates.lng + 1)))));\n\n    const valueTotal = filteredData.reduce((totalValue, item) => \n    totalValue + (item.name === \"Wind m/s\" ? item.value * 0.3 : \n    item.name === \"Temperature °C\" ? item.value * 2 * 0.4 : \n    item.name === \"Garbage reports\" ? item.value * 0.2 :\n    item.name === \"Humidity %\" ? item.value / 4 * 0.1 :\n    item.value), 0);\n\n    return (\n        <div style={divStyle}>\n            {filteredData.length > 0 ?\n                 <div style={chartWrapperStyle}>\n                    <p style={pStyle}>Possibility of fire {Math.round(valueTotal)}%</p>\n                    <h3 style ={headlineStyle}>We predict Fire based on these parameters</h3>\n                    <FunnelChart width={380} height={250}>\n                        <Tooltip />\n                        <Funnel\n                            dataKey=\"value\"\n                            data={filteredData}\n                            isAnimationActive\n                        >\n                            <LabelList position=\"right\" fill=\"#000\" stroke=\"none\" dataKey=\"name\" />\n                        </Funnel>\n                    </FunnelChart>\n                </div>\n                : 'No data Found'}\n        </div>\n    );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}